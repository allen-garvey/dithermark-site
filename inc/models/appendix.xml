<?xml version="1.0"?>
<appendix>
    <section title="Source" id="source">
        <description></description>
        <sources>
            <source url="${DITHERMARK_GITHUB_URL}">
                <title>Dithermark GitHub Page</title>
                <description>the complete source code for Dithermark</description>
            </source>
        </sources>
    </section>
    <section title="Dithering" id="dithering">
        <description></description>
        <sources>
            <source url="http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/">
                <title>Image Dithering: Eleven Algorithms and Source Code</title>
                <description>the article that served as the original inspiration for Dithermark</description>
            </source>
            <source url="http://www.efg2.com/Lab/Library/ImageProcessing/DHALF.TXT">
                <title>DITHER.TXT</title>
                <description>one of the orginal references for image dithering</description>
            </source>
            <source url="http://caca.zoy.org/study/index.html">
                <title>Libcaca study: the science behind colour ASCII art</title>
                <description>very thorough series of chapters on different aspects of dithering, including lesser known variations on ordered and error diffusion dithering. Also is the source for the halftone ordered dither pattern.</description>
            </source>
            <source url="http://pippin.gimp.org/a_dither/">
                <title>a dither</title>
                <description>the basis for the arithmetic dithers</description>
            </source>
            <source url="https://lists.ffmpeg.org/pipermail/ffmpeg-cvslog/2014-March/075712.html">
                <title>FFmpeg CVS Commit: add two spatially stable dithering methods</title>
                <description>Commit where a dither was integrated into FFmpeg with description of its advantages</description>
            </source>
            <source url="https://www.compuphase.com/riemer.htm">
                <title>Riemersma dither</title>
                <description>Description of an original approach to error diffusion dithering using a Hilbert curve</description>
            </source>
            <source url="https://codegolf.stackexchange.com/questions/26554/dither-a-grayscale-image/26572">
                <title>This codegolf challenge to dither an image</title>
                <description>had some interesting, original approaches </description>
            </source>
            <source url="https://www.visgraf.impa.br/Courses/ip00/proj/Dithering1/">
                <title>Artistic dithering with textures</title>
                <description>describes converting a texture into dither matrix, as well as the Veryovka-Buchanan dithering method. Also contains an overview of other dithering methods.</description>
            </source>
            <source url="https://docs.opencv.org/3.4.0/d7/d4d/tutorial_py_thresholding.html">
                <title>OpenCV: Image Thresholding</title>
                <description>compares adapting thresholding with classical threshold algorithm</description>
            </source>
            <source url="https://forums.tigsource.com/index.php?topic=40832.msg1363742#msg1363742">
                <title>Dither Stabilization</title>
                <description>describes the creator of <a href="http://dukope.com/">Return of the Obra Dinn's</a> process for making an image dithering visual effect that would remain stable even when the player moves the camera</description>
            </source>
        </sources>
    </section>
    <section title="Ordered Dithering" id="ordered-dithering">
        <description></description>
        <sources>
            <source url="https://en.wikipedia.org/wiki/Ordered_dithering">
                <title>Wikipedia's ordered dither article</title>
                <description>Good introduction to ordered dithering with Bayer matrix examples and formula. However, note that while the formula for the Bayer matrix is correct, the example for the 8Ã—8 matrix is not, something that caused me many headaches.</description>
            </source>
            <source url="http://alex-charlton.com/posts/Dithering_on_the_GPU/">
                <title>Dithering on the GPU</title>
                <description>the inspiration to port the dithers to WebGL, and the source for the hue-lightness dithering algorithm</description>
            </source>
            <source url="https://bisqwit.iki.fi/story/howto/dither/jy/">
                <title>Joel Yliluoma's arbitrary-palette positional dithering algorithm</title>
                <description>a variation on ordered dithering specifically tuned to give better contrast and color fidelity than classical ordered dithering. Also the source for the Yliluoma 1 and Yliluoma 2 dithering algorithms.</description>
            </source>
            <source url="http://allenchou.net/2016/05/a-brain-dump-of-what-i-worked-on-for-uncharted-4/">
                <title>This blog post from one of the developers of Uncharted 4</title>
                <description>details how they used dithering to simulate semi-transparent foliage in front of the camera</description>
            </source>
            <source url="https://github.com/tromero/BayerMatrix">
                <title>Bayer Matrix creation function in Python</title>
                <description>One of the only source code examples I could find for generating a Bayer matrix</description>
            </source>
            <source url="http://research.cs.wisc.edu/graphics/Courses/559-f2004/lectures/cs559-5.ppt">
                <title>University of Wisconsin Madison lecture (Power Point)</title>
                <description>The basis for the clustered ordered dithering matrix</description>
            </source>
            <source url="http://weber.itn.liu.se/~sasgo26/Digital_Halftoning/Thanh.ppt">
                <title>Clustered-dot-ordered Dither (Power Point)</title>
                <description>Includes an example of the spiral ordered dithering matrix which has similar results to the cluster pattern. Also mentions digital halftoning.</description>
            </source>
        </sources>
    </section>
    <section title="Image Filters" id="image-filters">
        <description></description>
        <sources>
            <source url="http://genericgamedev.com/effects/post-processing-pixelation/">
                <title>Post Processing: Pixelation</title>
                <description>An article about creative uses of pixelation</description>
            </source>
        </sources>
    </section>
    <section title="Color" id="color">
        <description></description>
        <sources>
            <source url="https://en.wikipedia.org/wiki/Color_difference">
                <title>Wikipedia's article on color difference</title>
                <description>Overview of the different ways colors can be compared</description>
            </source>
            <source url="http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/">
                <title>Seven grayscale conversion algorithms</title>
                <description>interesting article about how something as seemingly as simple as converting an image into black and white is really not so simple. Also is the inpiration for the color dither 'Luma' color comparison algorithm</description>
            </source>
        </sources>
    </section>
    <section title="Color Cycling" id="color-cycling">
        <description></description>
        <sources>
            <source url="https://blog.prototypr.io/color-cycling-in-pixel-art-c8f20e61b4c4">
                <title>Color Cycling in Pixel Art</title>
                <description>Good introduction to color cycling, why it was used, how it works and includes examples</description>
            </source>
            <source url="http://www.effectgames.com/effect/article-Old_School_Color_Cycling_with_HTML5.html">
                <title>Old School Color Cycling with HTML5</title>
                <description>examples of Mark J. Ferrari's color cycling work</description>
            </source>
        </sources>
    </section>
    <section title="Color Quantization" id="color-quantization">
        <description></description>
        <sources>
           <source url="https://web.cs.wpi.edu/~matt/courses/cs563/talks/color_quant/CQindex.html">
                <title>An Overview of Color Quantization Techniques</title>
                <description>a good general overview</description>
            </source>
            <source url="http://research.cs.wisc.edu/graphics/Courses/559-f2002/lectures/cs559-5.ppt">
                <title>University of Wisconsin Madison lecture (Power Point)</title>
                <description>show different color quantization algorithm's output differences. Also mentions clustered ordered dithering.</description>
            </source>
            <source url="https://github.com/leeoniya/RgbQuant.js">
                <title>RgbQuant.js</title>
                <description>the source for the RGB Quant algorithm.</description>
            </source>
            <source url="https://pdfs.semanticscholar.org/deaf/dd9782adb4f9211bf9743d5cc1bdad3753d2.pdf">
                <title>A Simple Method for Color Quantization: Octree Quantization (PDF)</title>
                <description>the original paper introducing octree quantization.</description>
            </source>
            <source url="https://www.hindawi.com/journals/cin/2016/5302957/">
                <title>An Effective Color Quantization Method Using Octree-Based Self-Organizing Maps</title>
                <description>a paper that describes using neural networks to improve octree color quantization</description>
            </source>
            <source url="http://delimitry.blogspot.com/2016/02/octree-color-quantizer-in-python.html">
                <title>Octree color quantizer in Python</title>
                <description>the basis for the octree optimize palette algorithm</description>
            </source>
            <source url="http://www.leptonica.com/color-quantization.html">
                <title>Leptonica Color Quantization</title>
                <description>describes their variations on median cut and octree color quantization.</description>
            </source>
            <source url="https://people.eecs.berkeley.edu/~dcoetzee/downloads/scolorq/">
                <title>scolorq: A Spatial Color Quantization Utility</title>
                <description>an original color quantization algorithm and implementation in C++, specifically tuned for small output color palettes.</description>
            </source>
            <source url="https://www.codeproject.com/Articles/66341/A-Simple-Yet-Quite-Powerful-Palette-Quantizer-in-C">
                <title>A Simple - Yet Quite Powerful - Palette Quantizer in C#</title>
                <description>details an original color quantization algorithm and associated utility in C#. Also includes comparison with other color quantization methods, including some lesser known ones.</description>
            </source>
            <source url="https://news.ycombinator.com/item?id=9213461">
                <title>High quality GIF with FFmpeg (Hacker News comments)</title>
                <description>fascinating discussion that includes several different color quantization recommendations</description>
            </source>
        </sources>
    </section>
    <section title="Canvas API" id="canvas-api">
        <description></description>
        <sources>
            <source url="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas">
                <title>Optimizing canvas</title>
                <description>I wasn't able to make use of any of these tips, but the article makes good points that should be kept in mind.</description>
            </source>
        </sources>
    </section>
    <section title="WebGL" id="webgl">
        <description></description>
        <sources>
            <source url="https://webglfundamentals.org/webgl/lessons/webgl-2d-drawimage.html">
                <title>WebGL Fundamentals</title>
                <description>a great resource for learning WebGL, this page on recreating DrawImage was used when implementing the dithers in WebGL</description>
            </source>
            <source url="http://learnwebgl.brown37.net/12_shader_language/glsl_data_types.html">
                <title>GLSL Data Types and Variables</title>
                <description>the range of values for the different data types table ended up being very valuable for fixing some bugs caused by lower default precision on mobile devices.</description>
            </source>
            <source url="https://www.khronos.org/registry/OpenGL-Refpages/gl4/index.php">
                <title>WebGL GLSL built-in functions</title>
                <description>a frequently consulted resource</description>
            </source>
            <source url="https://webglstats.com/">
                <title>WebGL Stats</title>
                <description>the closest thing to <a href="https://caniuse.com/">Can I useâ€¦</a> for WebGL support</description>
            </source>
            <source url="http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/">
                <title>Improvements to the canonical one-liner GLSL rand()</title>
                <description>the source for the random function used in the WebGL dithers</description>
            </source>
            <source url="https://gist.github.com/EliCDavis/f35a9e4afb8e1c9ae94cce8f3c2c9b9a">
                <title>WebGL Bitwise functions</title>
                <description>the source for the bitwise functions used in the WebGL arithmetic dithers</description>
            </source>
            <source url="https://github.com/evanw/glfx.js">
                <title>glfx.js</title>
                <description>A library of different image filter implemented in WebGL. The source for the denoise filter as well as the contrast algorithm used on Safari and Edge.</description>
            </source>
            <source url="http://madebyevan.com/">
                <title>Made by Evan</title>
                <description>cool WebGL projects</description>
            </source>
        </sources>
    </section>
    <section title="Image Filters" id="image-filters">
        <description></description>
        <sources>
            <source url="http://www.robots.ox.ac.uk/~az/lectures/ia/lect4.pdf">
                <title>Non-linear filters &amp; Image Compression (PDF)</title>
                <description>Differences between median and bilateral filters (with image examples) as well as denoising in general</description>
            </source>
            <source url="http://www.mif.vu.lt/atpazinimas/dip/FIP/fip-Smoothin.html#Heading89">
                <title>Smoothing Operations</title>
                <description>Nice chart and image examples that show the differences between different linear and non-linear filters, as well as their time complexities.</description>
            </source>
            <source url="https://stackoverflow.com/questions/5830139/how-can-i-do-these-image-processing-tasks-using-opengl-es-2-0-shaders?noredirect=1&amp;lq=1">
                <title>OpenGL Kuwahara filter example</title>
                <description>The source for the smoothing (Kuwahara filter) translated into WebGL.</description>
            </source>
        </sources>
    </section>
    <section title="Recommended Apps" id="recommended-apps">
        <description></description>
        <sources>
            <source url="http://pixelatorapp.com/">
                <title>Pixelator</title>
                <description>desktop app specifically made to turn your photos into pixel art</description>
            </source>
            <source url="https://halftonepro.com/app">
                <title>Halftone Pro</title>
                <description>cool web app that showcases halftoning, another type of dithering</description>
            </source>
            <source url="http://evanw.github.io/webgl-filter/">
                <title>webgl-filter</title>
                <description>an in browser image editor that showcases the image filters in the glfx.js library.</description>
            </source>
        </sources>
    </section>
</appendix>

<!-- <source url="">
                <title></title>
                <description></description>
            </source> -->